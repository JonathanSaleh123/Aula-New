title,link,post_time,post_text,comments
Why is cs70 this hard?????????????,https://www.reddit.com/r/berkeley/comments/112ofk0/why_is_cs70_this_hard/,2023-02-14 19:33:43,"Literally, I've been putting in a lot of effort to understand the material for this class. I've gone through notes again and again, watched lectures by both Rao and Professor Umesh Vazirani, attended lectures in person still, and even joined a study group and have study partners. However, wtf is this class???? i went to the OH and still don't quite understand how to do most of the problems on homework. It feels like this class is eating my soul. What's the point to study for something that I can't even understand.","Cause they want you to drop it and not major in CS.
dont worry. We have all felt this way (i felt like if i studied for hours on end I would not get anywhere). But keep on going. It may not seem like it now but once u finish it it will be worth it
Can I join your study group
It really is a beast of a class, especially if you've only experienced plug and chug/solve for x type of math classes (like me).

Not gonna say it gets easier, because it don't. But keep trying and hopefully it clicks. Try to pinpoint exactly what you don't understand and find a nice GSI to help you. Keep pushing, you'll make it through.
Just don’t give up. Working at your mental limits is how you grow intellectually.
I feel you so much. I took it last semester never skipped lecture or discussion and went to about 4-7 hours of OH a week. You will make it through. Honestly I still don’t understand a lot of concepts but office hours was my best friend.
Former multiple time 70 TA here. 70 is absolutely a monster class, and I really think students would benefit from 1-1 (or small group) interactions to learn how to prove things better. There’s resources such as CSM and HKN walk-in tutoring that can help in this regard. Best of luck friend :)
Dont worry, youre not alone. All my friends and I feel the same ;-;
I’ve alr decided to late drop it and make it next semesters problem
Don’t worry, it’ll stay like that haha. All seriousness, I think this is definitely normal and the HW problems def are very hard/ make no sense. You aren’t doing anything wrong. Keep up the effort.
i took math 55 and got an A-, what’s the difference between 55 and cs70
Stop focusing on the notes after you have understood as much as possible. Get a textbook off the web on discrete and do the problems in there too. Don't stop doing problems. Schedule mock exams of the past midterms every week/twice a week until the midterm and focus on improving your score. Use chat GPT (not on the hw or course material but the extra material) for guidance on how and where to improve if you did not understand part of the problem (it sucks at solving math, but it does give good advice). If you are really really having trouble, create an ANKI deck with problems that you have solved before and keep resolving them, again and again, (with spaced repetitition), until you can explain it to someone else well. Find out what exactly you have problems if possible and focus on those areas. Good luck!
 Really well done Reddit post about this. No matter what the department says, it is a weeder course. They know how to make it better so students can actually learn, but don’t.  [CS70 is made artificially harder](https://www.reddit.com/r/berkeley/comments/ura55a/critique_cs70_is_made_artificially_harder_heres/?utm_source=share&utm_medium=ios_app&utm_name=iossmf)
i dropped the class last week. But i honestly regret doing that. I really wanna study cs but i was scared I wasn't ready since I was also taking math 54 and didn't achieve that mathematical maturity yet. I think I'm gonna try again my junior year but for now you got this!
CS70 is unnecessary difficult because it’s meant to weed you out from the CS major. Pray that you get the grade you need to declare otherwise Data Science is always an option
Hmm.. so many people think this class is easy but those people do not search or post about the class (like you treat calculus I). The advice from here is also the things that the most of people know from high school (like basic stuffs like doing practice exam, meet TAs etc).

My opinion is that we should feel this class is not that hard if we want to be a software engineer not app developer. Of course, the materials could not be related to the real work. I am just talking about the level of diligent and intelligence (I guess that the most of people do not have any problem for their intelligence). Some of friend says that data 8 is sooo hard even though the class is so easy. Well, they also says they work sooo hard but nope. I think Cal's student's gap is huge like other public schools. So, some people think it is so easy and some people think it is like a hell (I think the level of hardworking is different between people and this make the gap). Well, there might be some factors like back ground of math competition or something but those are for A+, so we do not need to talk about them. If you work with a lot of things like 4 technical class at the same time or researches so you do not have a time to study then you could feel CS70 is hard but if you are not it should be just normal. 

I am also taking this class and feel normal. Let's keep our mind strong and remind that this should be not that hard if we study hard (not even grinding).

You are smart as others or better do not worry and let's say it was easy after this semester.

&#x200B;

Good luck!!!!
Thank you I was just feeling extremely frustrated yesterday but I feel so much better now. Especially after seeing I’m not alone feeling this way about the class. Will keep up the effort and hang in here!
Hiiiii sorry we already have 10 ppl so probably not :( but you can always form one by asking ppl on 70 discord server
I’m not sure how much of school is growing your limits vs discovering where your limits are.
As someone who attended CSM for 61A/B/C and 70, it would help by a rather marginal factor (really depends on the mentor you end up with). I utilized practically every resource available, from different practice sessions, review worksheets, countless office hours attending, working with various groups of students and 1-1 sessions.

And despite all of this, I was not able to pass the course (as in not getting a PASSING grade, forget about declaring a CS minor). Didn't help that in the Spring 2020 semester I took it, most of the course staff were pretty inconsiderate, unhelpful, and in many cases, elitist individuals who treated students' valid concerns as humorous.
Once upon a time, EECS majors could take Math 54, Math 55, EE 40, CS 55, CS 150, and maybe Stat 134 if they liked probability. Then EECS profs decided that all EECS majors needed that material done by their sophomore year so they could actually take upper div EE courses in their junior year. Since the EECS majors did not have room in their schedules (thanks to the semester system), they created EE 16AB, CS 70, and CS 61C to cover the same material in fewer classes. Now you get 6 courses worth of content in 4 courses! Problem solved!

CS 70 is like 2/3 of Math 55 and 2/3 of Stat 134 in one course.
how hard can it be. it's only an introductory class to even declare CS. if it's that hard I might as well not do CS. Nothing is impossible if you just put the time in. I agree
[deleted]
(I'm not sure I understand the goal here. Most of the upper divs that SWE-oriented people want to take are restricted to CS/EECS - and sometimes DS - majors, except during the summer.)

Some people do that - math/CS double majors can opt to take Math 55 in lieu of CS 70."
For those who took CS70 with Rao,https://www.reddit.com/r/berkeley/comments/lwf83x/for_those_who_took_cs70_with_rao/,2021-03-02 15:12:32,"For those who took CS70 with Rao, did anyone watch Professor Umesh Vazirani's lecture videos instead. I find live lecture very hard to follow and don't really understand the notes.","Yeah - I didn’t really like Rao’s lectures. You can learn however u want; understanding the notes helps a lot imo, but other professors lectures are available and many people do watch them instead of Rao’s.
I gave up on the lectures entirely and just read the notes and went to discussion. I would say this is enough (ended with an A with no competitive math experience). So yea it cant hurt to watch other lectures!
Vazirani's lectures on Graphs and Probability are golden. Professor Rao initially seemed to be just reading stuff off the slides, but I gradually got accustomed to both styles of teaching. However, for all practical purposes, even if the notes are 100% clear to you, watch Vazirani's lectures to build your understanding of the material. I can't emphasize how great he is as a teacher.
I watched before exams for reviewing (2x speed)
I've never watched a Rao lecture after the first one. the notes are enough to understand the material.
Rao’s slides are honestly basically everything you need to know. To study for the final I went through every single one and went straight to practice exams and did really well. His slides just spit mathematical facts that you need to know. Lectures are not bad to me but great slides for review.
Where are you getting vazirani's lectures? have they helped so far. I took the spring 2019 mt1 and got a 45%. I literally don't know graph theory at all
I personally just ended up not watching any lectures at all. I spent that extra time rereading the notes in detail, which are very well-written and cover all the content you need.
thanks for replying! :D I have not taken my first midterm yet, so I was wondering if you know how well one will do just from understanding the lectures. (I am asking so I know how well prepped I am). though I will probably do as much practice as I can after finishing all the lecture videos.
yea i'm watching them and he's amazing. it gives you more of the in-person learning environment + other students asking questions.   


[https://www.youtube.com/watch?v=JVCfPXgFxC0&list=PLzAv\_uHZw7dTI2e0F8-lxxOWV9zXMzwNE&index=3](https://www.youtube.com/watch?v=JVCfPXgFxC0&list=PLzAv_uHZw7dTI2e0F8-lxxOWV9zXMzwNE&index=3)
The style of Rao’s exams is kind of unique in that it is pretty different from the type of questions that would be on homework. It really helps to see and try his past exams before you actually take it. Understanding lectures is probably barely enough; exposing yourself to the types of problems that may appear and applying that understanding is key."
How is CS170 with Alessandro Chiesa?,https://www.reddit.com/r/berkeley/comments/g6y3j6/how_is_cs170_with_alessandro_chiesa/,2020-04-23 17:07:20,"Avishay Tal and Umesh Vazirani are teaching Fall 2020, and Alessandro Chiesa is teaching Spring 2021. I'm thinking of taking 170 Spring 2021, and was wondering if any of you have had any experience with Chiesa--what's he like? How's his grade distribution? Is he a good lecturer?","according to my friend who's in 170 rn, Chiesa is a god-tier professor.  Heard nothing but great things from him. He's a really effective and engaging lecturer, and is really knowledgeable.
Chiesa and his italian lessons are the best.
I like him better than Prof Nelson currently in 170. He gives concise and sharp mathematical justifications and reasoning, simple but not overwhelming in logical jumps for lecture. Approve"
Doable schedule for CS in Spring?,https://www.reddit.com/r/berkeley/comments/3n4k7n/doable_schedule_for_cs_in_spring/,2015-10-01 10:33:46,"Is taking
CS61C (Randy H. Katz; Vladimir Stojanovic)
CS160 (Björn Hartmann)
CS170 (Alessandro Chiesa; Umesh Vazirani)
in Spring a reasonable workload? Or would replacing 160 with 188 (Peter Abbeel) be a better combination? Thanks in advance.","Seems doable. I think 188 and 170 have better synergy though, plus 160 and 61c are both project-based classes.
170 is not a difficult class. 
ehh

CS61C - boring and annoying

CS160 - I've beard bad things about the project-centered format

CS170 - boring and annoying

CS188 - boring and annoying
yeah I might switch out 160 for 188, thanks!
I think you mean

61C - oohh glorious eecs

CS160 - make dank eecs designs

CS170 - eecs theory so gr8

CS188 - dank pacman memes
That's entirely dependant on your personal preferences. For example, 61C is super interesting if you have any interest in how computers actually work. "
"Course Reviews For CS170, CS61C, and EE126",https://www.reddit.com/r/berkeley/comments/km6yjc/course_reviews_for_cs170_cs61c_and_ee126/,2020-12-28 20:22:41,"I remember seeing a few course reviews posted here after last semester and I found them useful (and since I'm bored) I thought I would continue that tradition also.

**CS 170:** **Efficient Algorithms and Intractable Problems** (Vazirani, Tal)

**Summary:** As one of the first upper-division courses most CS students take, 170 feels like a logical extension of the material covered in 61B, namely the algorithmic parts, but also using proofs and other material (namely modular arithmetic, graph theory, and some probability) from 70. I felt like the overall pace of this class was perfect, spending approximately 2-3 lectures on each topic.

**Workload:** The workload of 170 is concentrated in the homeworks. Every week, there's anywhere between 3-7 problems, mainly algorithmic design ones. They aren't really long, but they are definitely very challenging and take a decent amount of just thinking before you arrive at the answer. I think on average, I spent anywhere between 6-12 hours on the homework depending on the length. Other than that, there's also a coding group project at the end of the semester where you try to tackle a NP-Hard problem. Our group probably spent around 20 hours on it and placed around the 85th percentile in the class.

**Difficulty:** Personally, I actually found the material itself not too difficult to understand, mainly due to the lectures and textbook both being pretty good. The actual problems given out on homeworks and on exams are quite a bit tougher and involve more thinking beyond just understanding the algos covered in class. To prepare for exams, I usually first carefully read through the solutions of homeworks/discussions to understand what types of detail they are looking for in our answers (this turned out to be really helpful as for both MT1 and MT2, there were always 1-2 questions that were similar to HW). I also did anywhere between 2-4 practice exams. After that, you can usually notice some common patterns that solutions tend to take (ex: for graph problems, making copies of the graph, adding a vertex, reversing edges are common approaches), which will help a lot for tests.

**Overall Thoughts**: I really liked 170. Walking away from the class, I feel like I truly understand a lot of the algorithms and why they worked that I didn't quite understand from 61B and grinding LeetCode. Definitely a must-take class if you are a CS major.

**Rating: 9/10**

**CS 61C: Great Ideas In Computer Architecture** (Garcia, Nikolic)

**Summary:** 61C covers a wide assortment of topics relating to computer architecture and serves as a gateway course/prerequisite to EE upper divisions and a lot of important CS upper divisions, like CS162.

**Workload**: Surprisingly, out of the three classes, 61C ended up taking the most work. Most of the work isn't really that particularly hard, but there is just a ton of it. To start, there are four projects (the last 3 partner), which increase in workload/difficulty as the semester progresses. The first project took me \~10 hours, but the last two probably took like 20-30 hours each. In addition, there are around 11 homework assignments, each of which took between 2-4 hours to complete. There are also weekly labs, which takes a few more hours. Also present this semester are clicker questions to complete for each lecture. Another unexpected source of time drain: wasting time being confused since OH queues routinely takes 4-6 hours. The relief policy implemented midway through the semester helped lessen the workload a bit.

**Difficulty**: Material wise, the content in 61C is probably the easiest to understand out of the three, particularly since Garcia's pre-recorded lectures were very well-made and well-explained (Bora's weren't nearly as good, but still not bad). That said, the class covers a lot - you learn to program in C and RISC-V and there's a ton of other material (number representations, circuit stuff, datapath, cache, virtual memory, performance programming, etc). To prepare for tests, I found looking through the lecture slides and discussion answers, as well as doing 4-5 old exam questions per topic to be helpful and sufficient. New this semester was having actual coding sections on both the quest and the midterm, which was a pain.

**Overall Thoughts**: As evidenced by the many 61C posts this past semester, there is a lot of room for improvement for how this class can be run. That said, I actually found the material to be quite interesting a lot of the times since I've never really thought about how computers truly worked until this course. Parts of the projects are also pretty interesting, but they are definitely frustrating and stressful. For the Garcia rendition, you can have project partners, so make sure to pick someone reliable that is also taking for a grade if you are.

**Rating: 7/10**

**EE 126: Probability and Random Processes** (Parekh)

**Summary:** EE126 is an extension on the probability portions covered in CS 70. In the first month, we do a speedrun of all of the probability concepts covered in CS 70, followed by MT1. The rest of the class covers more advanced concepts, with a particular emphasis on Markov chains (infinite and continuous) and estimation (MAP, MLE, hypothesis testing, LLSE, MMSE, Kalman filtering). The class moves very fast overall.

**Workload**: Similarly, the workload of 126 is concentrated in the homeworks. Every week, there's around 6 problems and they usually take me anywhere between 8-13 hours. There's also weekly Python labs where you apply concepts learned in class that take 2-3 hours. We were blessed with 3 HW drops and 3 lab drops, which helped a lot in the weeks I had midterms/projects due.

**Difficulty**: Out of the three, 126 by far has the most difficult to understand material. The lectures are quite abstract and just zooms through a ton of proofs and theorems. Parekh was a decent lecturer, but the material was just hard and the textbook honestly wasn't that useful and was even harder to understand. That said, the actual homework and exam problems are doable even if you don't 100% understand everything covered in the lectures. I personally found just doing/looking over 4-5 practice exams before each test to be really helpful as the problems are more application-based rather than proof-based and after doing a few, they start to click.

**Overall Thoughts:** Overall, I liked 126. The material felt a bit dry at times, but I think the class definitely helped build up my ""mathematical maturity"". That said, I'd only recommend the class if you felt you did well/liked the probability part of CS70 because it does move pretty fast and if you didn't like 70, you probably won't like 126. Definitely make sure you have the probability and markov chains portions of 70 down cold before taking this class.

**Rating: 7.5/10**

**Conclusion:** As expected, taking these three together, along with a breadth, turned out to be quite exhausting. I ended up surviving and got A's in all three, but I essentially had to spend almost every waking hour on studying or working on problem sets/projects. I didn't end up spending nearly as much time as I would've liked on recruiting for internships and, once again like last year, have not managed to land anything. I would only recommend taking the three together if you are a strong student/don't have much other time commitment, but I definitely feel I learned a lot this past semester.","would agree with a lot of this.   Few things I would add:

170 notes are truly incredible.  The textbook is really easy to read, but it fully covers all the course material.  Someone described it as if ""a really smart student gave you a tl;dr of the material"", and I think it's spot on.

&#x200B;

126 is HARD.  like really really hard.  I had no problems in 70 or 170, but this stuff went completely over my head.  If you aren't extremely comfortable with 70/other stats, or if you aren't interested in advanced statistical research, I'd probably pass on it.  The lectures were really hard to follow, but there are other good resources for understanding class material.  I was a huge fan of the discussion walkthroughs, and practice exams are a must. It's worth noting that the curve (this semester at least) was extremely generous, and the head TAs are amazing. Also, I think this class had the least ""real world relevance"" of the 3; 170 is really useful for leetcode (as well as general understanding of complexity theory/p vs np), and 61c teaches you how computer hardware actually works. I honestly don't really know why poisson proccesses are useful, but I guess now I can read Dream's cheating accusation paper?

I think you oversell 61c.  I can't express how much of a shitshow this class was.  This class is without a doubt the worst experience I've ever had at berkeley.  The videos are nice + the material is alright, but everything else is awful.  There were so many logistical nightmares (impossible quest and final, harder projects than previous semesters, no piazza support, no office hours, passive aggressive staff). Also, I think the staff gets off a little bit too easy after the ""relief package"".  Great, you can take an incomplete if you want (aka redo a large majority of the class a semester or  more after you initially learned the material). They also made labs + 2 homeworks optional, but the projects and exams had material taken straight off said assignments (aka if you didn't end up doing them anyway, you were fucked on everything else). I'm not entirely sure how either of those made my life much easier, and everyone's genuine complaints about the class were never resolved. If possible, wait a year to take this class (when some of the student staff members rotate out).
Also just dropping this link down here, used it when I was a freshman back in 2014: Has a bunch of stuff from the Berkeley CS FB group, but fb groups seem to be a dying breed nowadays besides for memes: 
https://docs.google.com/document/d/1qgPEICPPCAI2T7On8gJ7kle8gaMivHu337ps4q_psdI/edit?pli=1

Not sure how relevant it is after 6 years. For me it helped with figuring out which upper divs to take each semester after declaring.
I thought the opposite for 170 and 126 difficulty. 170 was really hard for me and I spent a ton of time to master the material, versus 126 I was able to understand easily. Imo, the 170 homework’s were so hard to come up with versus the 126 homeworks felt more like just doing math. I think it really depends on whether or not you liked 70 or 61B more
The only complaint i had about 170 was that some of the office hours were understaffed. however, i really liked the homework parties and thought that they were well organized. 

As for 61c, I enjoyed the class for the most part except for Project 4, which probably took me around 60-70ish hours while the others took 10-30, yet I got the worst score out of all the projects lmao.
Thank you for putting this together!! I want to second 61C, I think it was a good class but gosh the workload! I don't know what I would have done if it weren't for the relief package and PNP
Interesting. I was in two of these classes with you this semester then lol, so I guess I feel obligated to give my critique on your critique.

61c: Lol pretty spot on. I think course staff gave it their all and the class kind of collapsed a bit from the weight of all the students taking it. I would blame the system allowing such a course to be so over enrolled. They definitely fucked up the quest a bit, but I honestly think the final was pretty fair for an open notes test, although for sure a challenging exam. Getting to work on projects and labs with a partner probably got me the most human interaction I had this semester, which was really great. I think we had a good community on discord, and shoutout to those who would do a great job of answer questions on the official course discord and piazza.

126: Yeah pretty fun class; I think it is a better class overall than 70 but I still would rate 70 higher because 1. Rao is one of my faves and 2. there was more of a breadth of material. I agree that if you didn't like 70, this class probably isn't for you, but if you liked 70, it will be a great time since it picks up right where 70 leaves off. I honestly thought that the class was decently underwhelming because a lot of people had hyped it up as being the best class they every took,  but I couldn't get more than mildly engaged until Kalman filters came up, which I thought were super cool. I liked Parekh a lot; his lectures weren't my favorite but he has been one of the most supportive professors I have had for a class.
i felt like for 61C the lecture videos were too big-picture and a waste of my time. The discussion videos were a lifesaver though. Thank you for the review! I’m taking both 126 and 170 probably this semester so it really helps.
Planning to take all 3 of these classes, thank you for your detailed summaries :)
>but I guess now I can read Dream's cheating accusation paper?

HAHA
Yeah, 61C definitely had a lot of issues. I didn't really describe them since that would warrant a whole separate post and seems like there are already a lot of these posts around. It's one thing to cover this much material and give out hard projects (which personally, I did find pretty interesting, though the performance requirements were definitely set too high on Project 4 and they went overkill on hidden edge case tests on projects which screwed me over on Project 2), but they have to be accompanied with adequate support, which was definitely not the case. Honestly, the biggest issue, even beyond the questionable attitude of some course staff on Piazza, was just the outrageously long OH wait. They were so ridiculous sometimes I just found myself opening the queue website and just shaking my head and not sure whether to laugh or cry. There were several times I was awake all the way until 8 AM and I thought about joining the queue so that when I woke up in the afternoon, hopefully I'll get called. The only reason I gave it a 7/10 is because I genuinely found some of the material pretty interesting and it was a cool change from my other two p-set heavy courses.

&#x200B;

Similarly, I found the 126 lectures to be hard to understand also. I ended up just watching the recorded versions since I frequently needed to rewind and rewatch to understand wtf was going on. That said, I probably didn't understand like 1/4th of the lectures and still ended up doing very well on exams (+1.5 SD on the midterms, +1 SD on the finals) just by understanding the homework and practice exam problems well. Definitely not a class everyone should take (I took it because I was hoping to take 189 in the spring, which is not happening because I'm still stuck at 200 on the waitlist lmao). I probably should've went to discussions or looked at discussion walkthroughs, but I ended not having time to go to discussion for any of the 3 classes lol. The 126 course staff is really helpful though and answered basically every Piazza question in a very detailed manner. The few times I've went to OH for HW, I've gone away understanding a lot more also. A world of difference compared to 61C lol
For me, 170 lecture was easy to understand, but the actual exam/homework problems were hard to master and figure out. 126 lecture felt very hard to understand at times, but the actual exam/homework problems felt easier relatively for me.
> As for 61c, I enjoyed the class for the most part except for Project 4, which probably took me around 60-70ish hours while the others took 10-30, yet I got the worst score out of all the projects lmao.

I basically had the exact same experience when I took 61c with Weaver in Sp20. Honestly up until Project 4, I thought the workload in the class was fairly reasonable, but the performance portion of that project alone took me an absolutely insane amount of time and I still only ended up getting around 10 out of 40 points available for the speedups. I personally feel like project 4 should just be redesigned, because that portion of it basically devolved into trial and error past a certain point, since a bunch of stuff like OpenMP and other parallelism shit has overhead thats impossible to gauge and you just end up testing every possible method just to barely squeeze out any performance gains, some of which weren't even legitimate due to variance in the autograder output.
Sounds about right - perhaps our experiences in lecture are swapped bc (no offense to any profs) vazirani > rao and ramchandran > parekh in lecturing imo."
