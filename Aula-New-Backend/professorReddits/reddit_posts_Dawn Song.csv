title,link,post_time,post_text,comments
New Schedule Draft is out for Fa22,https://www.reddit.com/r/berkeley/comments/rvkrew/new_schedule_draft_is_out_for_fa22/,2022-01-03 19:47:26,"Link: [https://www2.eecs.berkeley.edu/Scheduling/CS/schedule-draft.html](https://www2.eecs.berkeley.edu/Scheduling/CS/schedule-draft.html)

Interesting stuff I noted was

* CS 61A being taught by Professor P. Fox herself, which is great to see! I guess this means Denero is off in the data science dept, maybe there's news for data8/data100 there as well?
* Professor Hug back in 61b, i wonder if he will continue to teach gitlet so early in the semester if at all, I wonder who will be teaching data 100 then...
* New faculty hire in Lisa Yan (not completely new as they are teaching data100 with Prof Hug this spring [https://classes.berkeley.edu/content/2022-spring-data-c100-001-lec-001](https://classes.berkeley.edu/content/2022-spring-data-c100-001-lec-001)),
* Professor Ranade teaching 16b and 127 (which a LOT of people were waiting for),
* Michael Ball teaching 375,
* Professor Popa in 261 (which is completely unrelated from CS 161 which is taught by Nick Weaver -- kinda a shame as I wanted to see him branch out and teach some other classes (61b with Nick sounds fun lol, may make it redesigned in golang though XD, same with 162) but I understand that 161 being offered every semester is important to it being persisted and I'm sure fa22 161 students are overjoyed at the news lol)
* and Professor Rao in CS 70 again also was great to see as they are very familiar at teaching those areas.
* On that note Professor Babak Ayazifar will be teaching both CS 70 and EE 120 per [https://www2.eecs.berkeley.edu/Scheduling/EE/schedule-draft.html](https://www2.eecs.berkeley.edu/Scheduling/EE/schedule-draft.html) which is great news for anyone who couldn't get in this semester!
* Professor Chasins teaching CS 164 again, seems like a return for OCaml and a tearful goodbye to Hilfinger's ChocoPy (btw where is Hilfinger on here?? I hope he hasn't retired...).
* CS 168 finally being offered although CS 160 is not offered (not an issue since it's usually there in summers),
* Professor A. Sahai teaching  CS 182 (seems like we'll get another bio-focused 189 since he's not there but him teaching a PyTorch class (altho 182 is clearly more than that) falls in line with what I saw in eecs16b),
* 186 being completely online even with everything hopefully back in-person. I guess it will be CS W186 then?
* No CS 188, though if it happens, Russell and D. Song are my guesses for the professors if they get the funding for that to go through and Abbeel still isn't able to teach it.
* As well as a return of a few 194s (I heard a few more are planned yet to be listed though such as Dawn Song's DeFi CS 194/294-177).

&#x200B;

Keep in mind this is still a draft so changes can be made, but thoughts?","Lisa Yan was a lecturer at Stanford for a couple of years. She has a PhD in CS education (also from Stanford) and is an excellent instructor overall. Hug and Yan should be nothing short of the teaching dream team.
Holy shit they resurrected 168 from the grave
It is unlikely that I will do gitlet at all. As much as some students love it, it has relatively poor synergy with the course material, and I also personally find it a bit boring (sorry Joey! It is a **great** project, just not my style). But I'll review all the course evaluations over the summer to decide whether to keep it or not.
goated, thnx for the update
From what I've seen, CS 160 is planned for the spring next year.
182 is more of an applications class.  Wonder how Sahai will approach it.  Hopefully they offer it in the spring with another professor in case he makes it theory intensive.
Ranade and P. Fox, we love to see it
Oh I so want to teach other classes.  But 161 is one of the classes we‚Äôve scaled to meet demand (500+/semester).  The only way to maintain that is run the class every semester.  I‚Äôd really like to do 162/redo-162-project-as-194/162 as a sequence.
Good to see 176 back, though Prof Yosef isn‚Äôt teaching it.  But since Prof Ioannidis is so involved on the comp bio end, she a good replacement.
Gonna take 182 with my favorite prof
who's pamela fox?
and also what has dan garcia been doing i haven't heard of him since his 61c semester in the first semester of online
damn 176 seems like a really cool class. Doubt I'll get in though. Are prerequisites usually enforced for CS classes?
[deleted]
I miss Ranade
SO happy about babak teaching 120!!
182 is taught in pytorch, not tensorflow
hmm does this mean Shewchuck is not teaching 189 this semester?
Just to clarify, who is teaching 189 in Fa 22?
I'm really interested in 168, but since it's scarcely offered, does anyone know whether it's a difficult class to get into? I'll be a senior then, so i should have a decent slot all things considering
No 188 either.
Is 162 a preq for 168? I‚Äôm seeing conflicting info on different sites
I would recommend Demmel/Nelson cs170. I took Jelani Nelson's cs170 and enjoyed his teaching style very much. It's a hard class, don‚Äôt get me wrong, but it was all worth it.
Yes, Prof. Hilfinger is retiring. His last lecture is tomorrow 4/29 at 1pm in 155 Dwinelle.
omg you just made me remember that Lisa Yan was the one i was referring to in [https://www.reddit.com/r/berkeley/comments/mm8sb0/comment/gtrc4dp/?utm\_source=share&utm\_medium=web2x&context=3](https://www.reddit.com/r/berkeley/comments/mm8sb0/comment/gtrc4dp/?utm_source=share&utm_medium=web2x&context=3)   


I'm glad she finally decided to leave Stanfurd for Cal, go bears!
Let's just hope there exist enough TAs out there for the class to be a normal upperdivision size now...
Any thoughts on the lack of a fall offering for its future? Dyt it doesn‚Äôt matter as much as other classes because of summer + is cs160 usually a ‚Äúfall xor spring‚Äù class?

I didn‚Äôt mention stuff like 270 not appearing for that reason (it‚Äôs biyearly spring only)!
I actually have the opposite viewpoint: Marvin Zhang's 182 appears to be less application-focused than past iterations (the usual final project is now a final exam being the main point, until the course site comes out not much more to say on the matter). I hope Sahai recognizes the power of PyTorch and brings back an application-based final project, as he did when introducing those notebooks into 16b. Marvin Zhang making DS 189 Listgarten/Malik-theory oriented instead of Shewchuk application-oriented is another example of how he prefers theory but we will have to wait and see what actually happens this spring (note that this makes sense for DS as many of those students are double majoring in a subject like biology so listgarten's version does make more sense to offer to DS students).

However, you very well could be correct. Maybe Sahai will make it even more theory intensive as that's always a possibility. The fact that NNs need big data makes me hope a deep NN class would be very application-based but if Sahai ruins it then we always have Levine's [https://www.youtube.com/playlist?list=PL\_iWQOsE6TfVmKkQHucjPAoRtIJYt8a5A](https://www.youtube.com/playlist?list=PL_iWQOsE6TfVmKkQHucjPAoRtIJYt8a5A) to lean back on and audit... definitely not the same though :(
Yeah I‚Äôm sure other universities would also love seeing a Rust OS project on the scale of pintos üëÄ

After all Berkeley did take inspiration from Stanford, this could be a chance for Berkeley to give back and help lead education in that sector!
hopefully me and you both survive through bestie üòµ‚Äçüí´
Pamela Fox is a new lecturer who has taught 61a alongside DeNero and Hilfinger in the past alongside some other classes (she was a CS 302 co-lecturer last spring, the class for summer instructors, maybe 169 as well iirc but i have a shaky memory there and the other Professor Fox teaches that so I very well could be confounding the two).

I talked to her once about the work she did at Khan Academy on their CS curricula (which I actually used as a kid growing up)  as well as some stuff she did on Coursera. She's done *a* *lot* for 61a these past few semesters and I'm interested in seeing how she changes the course as it's a course that has been evolving a lot recently with SQL ‚Üí Regex ‚Üí BNF etc, as well as an A+ project and new additions from when I took it! I can tell she cares about teaching a lot and have had heard good things about people who took 61a with her though she came just after my time... I took 61a in su20 haha.

And I think Dan was on sabbatical.
usually not
yeah and we could also use those profs to teach grad classes like 286, does 186 still use Hellerstein's lectures lol?
well now she's back from her leave and teaching 2 classes at that :)
yeah, usually he teaches 120 in the spring only, this is quite a surprise IMO but a pleasant one at that!
yeah... i think i misremembered because it was pytorch that Prof Sahai introduced into eecs16b this semester (which is what i referred to), i think i just typed the wrong thing, ill edit it, thanks!
He is for spring 22, the above is for fall 22 which is after sp22.
Also note that Shewchuk is only teaching CS 189, DS 189 will be taught by Marvin Zhang
NVM: Listgarten and Malik
prolly will be. but i think most seniors will get into it. i doubt any juniors will get in. Depends on how big the class is also, if its around 500, itll be fine but if its < 300, then big yikes
FWIW there were 500 seats last time it was offered [https://classes.berkeley.edu/content/2020-spring-compsci-168-001-lec-001](https://classes.berkeley.edu/content/2020-spring-compsci-168-001-lec-001)
it's not, that's an old prereq
and she can also teach CS 168 in the future so this is incredibly based
BTW, Lisa Yan also did her undergrad at Cal, which is doubly awesome
Prof. Fox co-taught 169 this past semester. I didn‚Äôt love the class (more specifically, I absolutely hated it), but its failings weren‚Äôt her fault and she clearly has a passion and a great talent for teaching CS. It‚Äôll be cool to see her teach a class that isn‚Äôt buzzwordy garbage!
that's good. Still don't think i'll get in though since I'm not a cs major and I imagine seats are reserved T_T.  thank you for the answer!
[deleted]
Oop you're right my apologies.

Wait, 182 is being offered Fa22?! Let's goo!
ya but there were more TAs back then since 168 was offered once a year. Its been 2.5 years since, so there will be a lack TAs along with the fact that the budget is less
Thank you
yeh as i said above, havent taken a class with her so everything above was second-hand anecdotal. Though i bumped into her in Soda a couple of times and she was a nice person to talk to. Am also a huge fan of her work at Khan Academy. I think she'll do good things with 61a though i thought it was a great class as is when i took it (doesn't mean that it cant improve ofc).
if you phase 1, and wait it out then who knows
:o isn‚Äôt that the first live lec 186 in awhile? Is this confirmed or could this still change, might have to sign up for it if so
Yeah that‚Äôs also usually a spring-only class, I was surprised to see it there‚Ä¶ I also think this is  Prof A. Sahai‚Äôs first time teaching it, should be an interesting experience
yeah ive been worrying about that myself tbh"
What can you tell me about my classes this semester?,https://www.reddit.com/r/berkeley/comments/2t7y5t/what_can_you_tell_me_about_my_classes_this/,2015-01-21 14:23:21,"I'm taking

CS 161 with dawn song
CS 172 with trevisan
EE 122 with wolisz
EE 126 with parekh

What are the workloads like for each of these classes? Are the exams hard? What are the professors like?","Try asking the [Course Advice](https://www.facebook.com/groups/631097886985088/662740297154180/) Facebook page or search the course surveys on [HKN's website](https://hkn.eecs.berkeley.edu/). 
Rate My Professors is your friend.
I looked, but I didn't get much info."
"Course Reviews Fall 2021, CS 161, CS 162, CS W186, CS 194-177 (DeFi), MATH 128A",https://www.reddit.com/r/berkeley/comments/rpi4ev/course_reviews_fall_2021_cs_161_cs_162_cs_w186_cs/,2021-12-26 23:45:49,"CS 161 (Raluca Ada Popa, Nicholas Weaver):

Rating: 8.5/10

Workload: ~4-5 hrs per week, ~10-15 during exam weeks and proj2.

Pros:

‚Ä¢ Probably the lowest workload upper div CS class

‚Ä¢ Fun and interesting projects, 1 and 3 are not time consuming at all and can be done in a night. Project 2 is a large time sink but it was also fun and the class gives you a ton of time to do it even if you start late

‚Ä¢ Amazing course staff - the course staff this semester was super accommodating and honestly the best I've seen in a CS class at Berkeley so far. Helpful extensions during stressful weeks, letting slip days carry over Thanksgiving break, extra hw drops, flexible exam procedures, quick piazza response times, discussion TA

‚Ä¢ Reasonable exams - if you do past exams and make notes of the textbook/lectures on your cheat sheet it's on the easier side to do well on the exams compared to other upper divs (no weirdly hard exams compared to content like CS 188, past exams have questions that are slight variations of each other)

‚Ä¢ Great online textbook, super easy to catch up with lectures by using it if you fall behind or don't want to watch lecture.

Cons: 

‚Ä¢ Personally I wish the class went more in depth on some topics, but it is a survey class so it can't be faulted that much here

‚Ä¢ Sounds weird, but the projects might be TOO easy. Projects 1 and 3 could be more in depth and I think it would be fun to have harder challenges than the ones that they currently have. (Project 3 in particular has easier questions than many intro level CTF questions on web security). Considering project 2 requires probably 30-50 hours compared to the ~6 for project 1 and ~4 for project 3, I think there could be a better balance especially when each is weighted equally. However, I still think that project 3 should be on the lighter side given that it ends up being close to finals week. 

‚Ä¢ The midterm exam felt kind of pointless this semester. So many questions were thrown out that it seemed like it didn't matter at all and the scores ended up very samey. The course staff (again, amazing) did make the final clobber the midterm though so it made this less of a problem.

Overall, a great class and would highly recommend especially if you want to round out a busy schedule without adding too much extra work.


CS 162 (Ion Stoica)

Rating: 8.5/10

Workload: ~20 hrs per week

Pros:

‚Ä¢ You will definitely learn a ton. Probably the single class that has increased my computer science knowledge the most at Berkeley so far but also conceptually difficult.

‚Ä¢ Adding onto the previous point, really interesting topics if you care at all about performance, systems, design.

‚Ä¢ Rewarding - once I got a concept in this class or figured out the homeworks and projects it truly felt rewarding and I could actually say I learned something significant for pretty much every assignment.

‚Ä¢ Good lectures - a bit boring and slow, but easy to follow and 2x is your friend.

‚Ä¢ Good exams - studying definitely pays off, although a lot of it is just knowing terms + concepts (make a good cheat sheet) 

Cons:

‚Ä¢ TONS of work - this is basically a 6-8 unit class. With the additions to the 2nd project, the workload  is even higher (proj 2 is definitely now the hardest one). Projects are all long and you constantly have one the whole semester, HWs are long and some are pretty much projects in other CS classes (spent more time on average per hw for this class than projects for 161).

‚Ä¢ Course staff could have been a bit more accommodating w/ regards to projects. Proj 2 now has a new part which is basically 1 to 1.5 projects on its own. The project could have used a bit more guidance considering it's new and some parts required some tricky solutions that were quite confusing to grasp using just the spec + design review. Additionally, some extensions to proj 2 definitely would've helped considering it was during the busiest time of the semester as well. They did mention at the end of the class that the curve was adjusted to compensate for proj 2's increased definitely so that was great of them. 

‚Ä¢ Discussion was mandatory and required camera on (some may not see this as a con, but it was annoying to me), some sections had participation that wasn't just based on showing up (? Could be wrong on this) 

‚Ä¢ I would consider having a good group as a pre req for this class since the projects are a huge part of your grade, extremely time consuming, hard, and must be done in a group of 4. Make sure you have people you trust to work hard(at least 3/4) in your group or it will be a bad time. I was lucky enough to have 2 friends taking this class w/ me which helped a lot and our fourth group member(found through class) was also great.


CS W186 (Lakshya Jain)

Rating: 6.5/10

Workload: ~8-12 hrs per week

Pros: 

‚Ä¢ Good transition to upper div CS classes, projects and topics use and build upon many skills and concepts from lower divs like 61B, 61C

‚Ä¢ Lots of resources - web lectures, review lectures, discussion, class notes (really good class notes)

‚Ä¢ Balanced workload over whole semester, can expect to spend the same amount of time each week and it's a reasonable amount of time even though you will always have a project going on.

‚Ä¢ Exams are straightforward and similar to past exams while still testing knowledge

‚Ä¢ Projects help you learn the material well

‚Ä¢ Accommodating course staff - respound quickly, helpful extensions.

Cons:

‚Ä¢ While it's a good intro to upper div classes, most of the concepts are systems concepts and are honestly just taught in a more general and better way in 162. So it might be more worthwhile to take this class before 162. 

‚Ä¢ I personally thought the content was pretty boring.

‚Ä¢ While exams are straightforward, much of it is calculation bash for I/Os or trying to figure out what some SQL does. This makes the exams straightforward, but long and tedious. 


CS 194-277: Decentralized Finance (Dawn Song, lots of profs from other universities)

Rating: 8/10

Workload: ~8-10 hrs per week. Weekly lecutre quizzes (completion), 2 labs, semester long group research project.

Pros:

‚Ä¢ I loved the course content. Super new and exciting field and the class definitely hooked me into it. Lectures gave an overview of many DeFi topics and it was cool to hear lots of different professors speak.

‚Ä¢ Great course staff - gave lots of help and extensions on the tough Lab 2 and helped w/ projects.

‚Ä¢ The class has 2 labs, the second lab was really fun content wise and taught a lot about writing smart contracts (more of this later)

Cons: 

‚Ä¢ This class is only 2 Units!!! It is far more work than a 2 unit class should be. At minimum thisshould be 3 units but I probably spent more time on this class than 161 and 186 (could be due to choosing and working longer on a harder project though, not sure how much they were expecting in the end)

‚Ä¢Lab 2 could have used a lot more guidance from the class itself. There was only one lecture on smart contracts and the lab required us to have a lot of underlying knowledge to complete that wasn't really available from the single lecture. To complete the lab, tons of documentation had to be scoured along with a super helpful guide a classmate wrote.

‚Ä¢i wish there were more hands on assignments scattered over the semester rather than 2 labs, the first of which was basically a small math assignment. Of course, this would mean more work but this assumes the class is now 3-4 units.


Math 128A: (Per-olof Persson)

Rating: 6/10

Workload: ~6-10 hrs per week, weekly psets, ocassional programming assignment, biweekly quizzes

Pros:

‚Ä¢ Easiest required upper div applied math major class

Cons:

‚Ä¢ HW length varied drastically, some later hw were easily 3x the length of some previous ones and I wished the use of my drops was in my control earlier in the semester. 

‚Ä¢ slow grading of assignments, not too transparent with grades. Didn't really know my quiz grades or where my grade in the class stood at all the whole semester besides exam grades.

‚Ä¢ I thought the topics were fairly interesting, learning how some numerical methods work, implementations and proofs, but overall still very boring compared to all of the other upper div math

‚Ä¢ MATLAB","loving all the review threads!

thanks for sharing :)
I think for 162, maybe op didnt explicitly say, really rewards hard work you put in. 3 projects weigh equally as 3 midterms. I also took it this semester and I got full marks on HW, projects and discussion attendence with only +0.4, +0.5, -0.5 on the 3 midterms (no finals in this class) and still came out with an A. The curve is pretty insane I would say for a upper division CS class.


I will say theres a slight learning curve in the beginning of the class because they do throw a lot of concepts at you about OS without you understanding OS. It will all start making sense through HW and projects eventually.

One other tip on the group projects is have each other at least contribute code that passes -some- tests they give. Initially, you will spend more time understanding the given code base than writing code and getting 1 test they give to pass is a BIG deal. Plenty of friends I know who slacked on Proj1 and say they‚Äôll contribute in Proj2/3 never did because they never understood how everything works together. Since all 3 projects build off each other, theres no ‚Äúrestarting‚Äù after a project finishes. So get each other to write code that works even if its minor because the understanding it takes to write code that works far exceeds the time to write the code


One thing OP didnt mention is OH for this class, especially projects (and sometimes hwk) is almost useless. Yes you can get general guidance but if youre asking ‚Äúwhy isnt X working with my implementation‚Äù, chances are they dont know it since your solution varies so greatly with the staff and other students. Debugging on your own (or with your team) is by far the most essential skill to succeeding in this class.
How do you square what you learn about block chain in 161 with taking a DeFi class?
You mention that the workload for cs162 is \~20 hours per week. Is the course workload just a plateaud level throughout the semester? I.e - same amt of hw/disc/proj workload every week. And i guess this also depends on what grade you were aiming for(guessing an A)? Would love to know cause im taking this class next sem :)
Are lectures helpful in 162? Is the textbook better? Can you jump straight into assignments?
for math 128a, are they slow to release hw solutions? if so how would you know where the holes in your knowledge are?
i've read that 186 was a heavy time commitment project class at the same tier of 162, has that changed?
is the workload including lectures/labs ?
For the Defi class, are there any prerequisites? I‚Äôm taking 161 and 170 next semester along with that class.
How did you feel balancing the 4 techs?
thanks for this detailed review!
how long exactly (eg how many hours total/or how many days) did proj2 in 161 take you?
if my 61c  knowledge is lacking, will 186 of 161 be harder and which would have more workload?
>:)

:)
This is good advice about the class. Also for OH I agree that it wasn't too helpful. In person OH during project week is a mess and online is only slightly better because I'm pretty sure some TAs just read off the staff solution to help you fix code which kinda leads u in the right direction. Not ideal, but still a bit helpful when you are stressing about the project.
Blockchain definitely has it's issues which weaver was pretty adamant about pointing out  during the Blockchain lectures lmao.  ut the DeFi class definitely showed me that it also has huge potential. I'm of the thought that it's probably too early for it to go mainstream given how many security issues and shady things go on in Blockchain but the ideas behind it and possibilities it offers are really interesting.
So much of the variability on workload depends on the quality of your teammates. You really can‚Äôt do the work by yourself (you can but the class would turn into a 8-unit course), you need a bare minimum of 2 competent people in the group to split up the work, and preferably all 4 pull their weight.  I had a decent group where we all had solid all-around skills, so we alternated each of the 3 projects between code and design in pairs. Also, there are differences in who your TA is, some can be assholes when divvying out participation points at the end, so choose carefully.  Participation points is a non-trivial part of the grade.
Hmm it's pretty constant, I kinda averaged in my cramming time but it felt like it was similar work per week throughout aside from project 2 which I spent probably 20-30 hrs/week on during the last two weeks of the project.
Ngl. Opened up screen usage for VSCode and it was ~40hr/week near proj due dates. Treat it like a 9-5 job. Every week you‚Äôll have something to do whether that‚Äôs a proj or hw assignment. Generally good advice is to start really early and stay on top of your shit. There are really rough weeks where project and hw are due on the same week, along with a midterm before or after. So really manage your time well. I‚Äôd say an average of 20-30hr/week consistently is what you can make best out of it if you start early and stay on top. 

Also, if you really want to succeed, choose good partners. If they have internship experience or proficient with C, usually okay indication. Otherwise you‚Äôre just gonna have a bad experience. Teammates in my group who were initially friends are not friends anymore and we sussed out the imposters who cant code.
There was a textbook but it was more like extra material, everything for exams and course content was from lecture + discussions. I'd say for assignments(hw, proj) you can manage off only discussions but for exams you wanna go through the slides/lectures.
Hw solutions were immediately available, but the grades weren't. The hw were completion/effort based I believe but was still kinda annoying to not have any idea of what grades were entered until right before grades were released.
I wouldn't say it's close to 162 at all. It has a lot of project work since you have 6 projects and basically 2-2.5 weeks per project but each is definitely manageable within 10 hours and the easier ones took less time than that. They are also in java and are much easier to debug so it's far less painful than 162 C code and dealing with pintos codebase. Total time spent over all projects on 162 is ~100-120 hours(includes design, design review, coding, debugging) while 186 is ~50 hours
Way different. If you really want to get the most out of a design/systems class, take 162. It was much more rewarding than 186. I also agree with OP and took both concurrently this semester. Take 186 if you want an easy way out of the design req for CS upper division with some project based learning involved , although it seems like OPs review of 161 indicates that‚Äôs the better option.
Yup, although I definitely didn't watch every lecture or go to every discussion, this includes the time to learn the material per week.
The class being offered next sem is actually different from the DeFi one this past fall, but should be similar in areas. I think you could take it without any pre reqs, just basic cs knowledge and maybe some of the math stuff from cs70 will help (barely part of the class though, maybe more of a part in next sems version)
Was pretty rough especially during some of the midterm weeks where I would end up having 2 projects + 2 midterms due the same week and then more midterms next week, etc but I still had decent free time on weekends + time spent procrastinating during week. Im certain someone with better time management could have pretty free weekends aside from some busy weeks.
Any advice on which TAs to pick or avoid?
thanks, and what grade were yall aiming for? i feel like hours will vary a LOT if youre trying to get a good grade vs just pass
my 2 cents is that good partners != internships/being smart etc.

&#x200B;

everyone took 61c and knows c and knows gdb (some more than others ofc) and well we are all at berkeley so we are all capable enough at figuring out the material. but 162 introduces a weird codebase that nobody really will have prior exp working with and so what you really want to be looking for and, this is kinda hard without already working w them, is work ethic and time commitment imo. this class is going to asking for a lot of time sometimes and if a deadline is coming up, you need to make sure that your entire team is on the same page.
damn what if i am looking to just get a C- or above in the course, do you think it'll still be really bad? I'm not about to put in 40/hr week just for one class lol. Taking 162 just for the knowledge rather than the coding skills. Doing part time internship as well..
side question: how do people know whether the textbook's info is necessary to a class (any class not 162) or not? do they look at the practice tests super early? ask people who've taken the class?
what did you mean in math 128a that you wish you could've been in charge of your hw drops?
Yeah aiming for an A, although I feel like you would still want to go for at least a 90% on project points even if you weren't which still requires a mostly working solution, maybe subtract ~10 hours per project for debugging. Exam studying could cut down quite a bit of time however if not aiming for an A.
That is probably doable. I genuinely think you can‚Äôt fail a CS course unless you put zero effort, especially if it‚Äôs a curved class. If you PNP and put in some effort on exams, hw, and proj with a good group, I‚Äôd say P is guaranteed. But be low key amongst your groupmates about PNPing, cause they‚Äôll think you‚Äôre a crutch to the group. Just note that in group projects, you‚Äôll evaluate each other on how much work everyone contributed. If you think you can contribute to a fourth of the project or you‚Äôre willing to be a chad and contribute minimum effort and take a low group evaluation, go for it.
I honestly didn't even know we had a textbook, never looked at it. Everything is covered in lecture and the projects.
People usually ask on piazza at the beginning of class or during first lecture
Oh I wasn't too specific here but I fell sick and had to use some drops then also used another when I had a super busy week and didn't have any left for much harder hw that I wished I could've dropped lmao"
"Course Reviews Spring 2022, CS 161, CS 162, CS 188, CS 189",https://www.reddit.com/r/berkeley/comments/upa9fj/course_reviews_spring_2022_cs_161_cs_162_cs_188/,2022-05-13 22:23:07,"Doing reviews for the Undergrad Systems + AI speed run

CS 161 (Nicholas Weaver):

Rating: 9/10

Workload: \~4-5 hr/week, \~15hr/week when project 2 was being implemented

Pros:

* I found the content very interesting. It opened my eyes to a lot of security vulnerabilities and even improved how I approach my own personal security (security keys anyone?).
* Weaver was very passionate about the material (especially crypto) and  was a fantastic lecturer overall. If you read this post, best of luck being the CEO, Janitor, and Chief Mad Scientist of Skerry Technologies!
* Projects 1 & 2 are some of the coolest projects I've had to do for a class here. In Project 1, I felt like I was a hacker hacking into old decommissioned Gobian Union satellites. I thought the lore added some character from the otherwise same old same old CS project requirements (although obviously not required).
* For Project 2, I loved the systems design with security component of it. I found developing Project 2 very rewarding, as I not only learned Go, but I had practice applying a ton of the cryptographic primitives learned in class.

Cons:

* While there was an attempt to perhaps make how they are assigning grades more transparent, I felt that the binned grading scheme caused a good bit of stress for me. I think the bins are currently set unreasonably high, and there is a rumor that the bins will be shifted. I personally prefer a curve where you can estimate your position than unreasonably high bins with possibility (but not necessarily guaranteed) of a downward shift.

Overall, I strongly recommend any EECS/CS major to take CS161. It is super fun and the work around Project 2 can be managed.

CS 162 (John Kubiatowicz and Anthony Joseph)

Rating: 8.5/10

Workload: \~20 hr/week

Pros:

* Content is generally really interesting and very helpful in understanding systems.
* Working within an existing codebase like Pintos was initially rough, but it ended up becoming rewarding, as you end up seeing how so many of the core OS functions are implemented.
* Design documents and design reviews force you to actually think about all sorts of aspects integrating features into a large codebase. I think my systems design skills definitely improved by the end of the course.
* Both Professor Kubi and Joseph are solid lecturers! I highly recommend them.

Cons:

* I think at some point there was a Homework, Project, Design Document, and Midterm in the span of 2.5 weeks. I wished the workload was more distributed or that the deadlines were spaced out better.
* Workload around project due dates was very high (almost like a full time job), but this could have been mitigated through better time management.
* Good group is an absolute must (or enjoy having your back broken)! I was fortunate to have a great group and I survived.

Overall, I would highly recommend this course to anyone who is interested in becoming a SWE or who has an interest in systems.

CS 189 (Jonathan Shewchuk)

Rating: 8/10

Workload: \~10-12 hrs per week

Pros:

* I've been slow to pick up ML before due to the heavy math and I wasn't able to learn effectively from online resources. This class definitely pushed me over this hump, and now I find ML very exciting.
* I think Shewchuk's iteration has the right amount of theory to the point where I can understand the intuition for the algorithms as opposed to just memorizing certain formulas.
* Majority of the homeworks were very helpful in understanding concepts. In general, homeworks included both traditional math and theory based questions but also code implementation of certain algorithms. I'm glad there was a balance so I could see how the theory related to code in practice.
* I loved Shewchuk's lectures!

Cons:

* As someone who took neither EECS126/127 and survived off of the backs of EECS16B and CS70, I found HW2 very challenging and long. While I did learn many concepts, like multivariate Gaussians, I found some of the proofs unnecessary and too much work for someone who is inexperienced at math compared to my peers.
* HW difficulty and workload is generally inconsistent. Some homeworks are somewhat short, but other homeworks like 2 and 6 become very long.
* Grading bins are not transparent, but I've heard bins are generous.

Overall, I think it does a great job of introducing ML topics at a good level of depth. It is definitely a worthwhile course to take, and if you are interested in ML, if you can survive HW2, you should be fine in a Shewchuk semester.

CS 188 (Stuart Russell and Dawn Song)

Rating: 3/10

Workload: \~5-7 hr/week

Pros:

* Projects for the most part are really easy plug and chug. Definitely takes the stress off if you have a ton of other work to do.
* A small amount of content actually helped me understand some of a new research project I'm working on this summer.

Cons:

* Content at the end of the semester was very rushed, and in my opinion it is some of the most interesting.
* I have absolutely 0 clue why we decided to spend 2 whole weeks on a logic unit where we could have added at least taken one of the lectures and put it towards RL.
* No idea why grading policy claims participation is optional 5% extra credit, when the reality is that the bins are 5% shifted up from Fall 2021. The participation is only optional if you are a genius and absolutely crush the exams. To have a shot at even making a similar level bin as Fall 2021 you have to go to discussion or participate on Piazza. I don't have an issue with participation, but please don't claim it as extra credit when it is required for mere mortals like myself.
* The way the material is presented does not develop a sort of intuition you can get like from CS189, for example. I felt a lot of it became know X, Y, Z formulas (or I guess write it down on your cheat sheets).

Overall: If you are taking/have taken CS189, I don't think it is justifiable to take CS188 as a whole separate course when you could probably learn the relevant RL portions in 2 weeks tops (IMO if you are interested in RL, CS189->CS285 would probably be better). If you find Bayes Nets/HMMs fascinating, then take this course, but do it at the peril of wasting your time. It could perhaps be a good introductory course for those who don't want the hardcore nature of CS189 but still want some AI background.

EDIT: I don't want to rail on CS188. I think the course staff was helpful for project completion, discussion, etc. I just felt like the content actually taught in the class did not meet the high bar set by the other three classes mentioned here.","Damn ur crazy
it's funny that there's a whole unit on scheduling in 162 and course staff was absolute ass when it came to scheduling assignments this sem
U took four techsü§†
Cs 188 is a dogshit class. Keep railing :)
Fwiw we covered HMMs and PGMs in 189 too. So 188 is actually completely useless lmfao
Also will be saving this post!! :)
I love seeing people who want to get by the CS degree the easy, less stressful way by taking light techs like 160, 161, 186, 194s. Then they naively choose to take CS 188 and just get absolutely railed with the impossible difficult exams.
So you think 188 is harder than those?
188 is ""easy"" up until the exams. The content is so wishy-washy and everyone gets 100-ish on the projects and HW. 188 isn't a ""hard"" class, but 188 is a ""hard class to get a good grade in because wtf did we even learn"".
I took all of the classes OP mentioned and 188 ruined my 4.0 GPA (i got a B+)

It‚Äôs also his/her/their worst rated class. So yes, 188 was harder than all if those IMO. Your effort in this class doesn‚Äôt correlate well to the exams and the concepts don‚Äôt even come up as someone who‚Äôs interviewed for many ML engineer positions.
Seems like an odd way to run a course... so was it more useful to look at past exams?"
