{"ast":null,"code":"var _jsxFileName = \"/Users/michaelofengenden/Desktop/Aula/app/src/Chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async () => {\n    if (input.trim() === '') return;\n\n    // Make a request to the ChatGPT API\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: input,\n        max_tokens: 150\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        }\n      });\n\n      // Update the state with the response\n      setMessages([...messages, {\n        text: input,\n        type: 'user'\n      }]);\n      setMessages([...messages, {\n        text: response.data.choices[0].text,\n        type: 'ai'\n      }]);\n      setInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.type,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","input","setInput","messages","setMessages","sendMessage","trim","response","post","prompt","max_tokens","headers","process","env","REACT_APP_OPENAI_API_KEY","text","type","data","choices","error","console","children","map","message","index","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelofengenden/Desktop/Aula/app/src/Chat.js"],"sourcesContent":["// Chat.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Chat = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = async () => {\n    if (input.trim() === '') return;\n\n    // Make a request to the ChatGPT API\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/engines/davinci-codex/completions',\n        {\n          prompt: input,\n          max_tokens: 150,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          },\n        }\n      );\n\n      // Update the state with the response\n      setMessages([...messages, { text: input, type: 'user' }]);\n      setMessages([...messages, { text: response.data.choices[0].text, type: 'ai' }]);\n      setInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, index) => (\n          <div key={index} className={message.type}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAEzB;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC/B,6DAA6D,EAC7D;QACEC,MAAM,EAAER,KAAK;QACbS,UAAU,EAAE;MACd,CAAC,EACD;QACEC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,OAAO,CAACC,GAAG,CAACC,wBAAyB;QAClE;MACF,CACF,CAAC;;MAED;MACAV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEY,IAAI,EAAEd,KAAK;QAAEe,IAAI,EAAE;MAAO,CAAC,CAAC,CAAC;MACzDZ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEY,IAAI,EAAER,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACH,IAAI;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC,CAAC;MAC/Ed,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EACGlB,QAAQ,CAACmB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B1B,OAAA;QAAiB2B,SAAS,EAAEF,OAAO,CAACP,IAAK;QAAAK,QAAA,EACtCE,OAAO,CAACR;MAAI,GADLS,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXc,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGC,CAAC,IAAK9B,QAAQ,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAsB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACF/B,OAAA;QAAQqC,OAAO,EAAE9B,WAAY;QAAAgB,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApDID,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}