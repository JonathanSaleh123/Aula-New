{"ast":null,"code":"var _jsxFileName = \"/Users/michaelofengenden/Desktop/Aula/app/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY\n});\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    setMessages([...messages, {\n      text: input,\n      user: 'user'\n    }]);\n    const response = await fetchMessage(input);\n    setMessages([...messages, {\n      text: response,\n      user: 'bot'\n    }]);\n    setInput('');\n  };\n  const fetchMessage = async input => {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-3.5-turbo',\n      messages: [{\n        role: 'user',\n        content: input\n      }],\n      temperature: 1,\n      max_tokens: 256,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n    console.log('API response:', response.data);\n    return response.data.choices[0].message.content.trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' && sendMessage(),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","openai","apiKey","process","env","OPENAI_API_KEY","Chat","_s","messages","setMessages","input","setInput","sendMessage","text","user","response","fetchMessage","chat","completions","create","model","role","content","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","console","log","data","choices","message","trim","children","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","placeholder","_c","$RefreshReg$"],"sources":["/Users/michaelofengenden/Desktop/Aula/app/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    setMessages([...messages, { text: input, user: 'user' }]);\n    const response = await fetchMessage(input);\n    setMessages([...messages, { text: response, user: 'bot' }]);\n    setInput('');\n  };\n\n  const fetchMessage = async (input) => {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-3.5-turbo',\n      messages: [{ role: 'user', content: input }],\n      temperature: 1,\n      max_tokens: 256,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0,\n    });\n\n    console.log('API response:', response.data);\n    return response.data.choices[0].message.content.trim();\n  };\n\n  return (\n    <div>\n      <div className=\"message-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.user}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n        placeholder=\"Type a message...\"\n      />\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC;EACxBI,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;AACtB,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEK,IAAI,EAAEH,KAAK;MAAEI,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IACzD,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAACN,KAAK,CAAC;IAC1CD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEK,IAAI,EAAEE,QAAQ;MAAED,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;IAC3DH,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMK,YAAY,GAAG,MAAON,KAAK,IAAK;IACpC,MAAMK,QAAQ,GAAG,MAAMd,MAAM,CAACgB,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MACpDC,KAAK,EAAE,eAAe;MACtBZ,QAAQ,EAAE,CAAC;QAAEa,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEZ;MAAM,CAAC,CAAC;MAC5Ca,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,GAAG;MACfC,KAAK,EAAE,CAAC;MACRC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEd,QAAQ,CAACe,IAAI,CAAC;IAC3C,OAAOf,QAAQ,CAACe,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACV,OAAO,CAACW,IAAI,CAAC,CAAC;EACxD,CAAC;EAED,oBACEjC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAKmC,SAAS,EAAC,mBAAmB;MAAAD,QAAA,EAC/B1B,QAAQ,CAAC4B,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBAC3BrC,OAAA;QAAiBmC,SAAS,EAAG,WAAUH,OAAO,CAAClB,IAAK,EAAE;QAAAoB,QAAA,EACnDF,OAAO,CAACnB;MAAI,GADLwB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzC,OAAA;MACE0C,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjC,KAAM;MACbkC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIpC,WAAW,CAAC,CAAE;MACtDqC,WAAW,EAAC;IAAmB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClC,EAAA,CA5CID,IAAI;AAAA4C,EAAA,GAAJ5C,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}