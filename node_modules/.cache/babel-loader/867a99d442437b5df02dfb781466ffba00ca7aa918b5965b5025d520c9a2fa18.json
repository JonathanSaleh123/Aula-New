{"ast":null,"code":"var _jsxFileName = \"/Users/michaelofengenden/Desktop/Aula/app/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { OpenAIAPIKey } from './config'; // Create a file named 'config.js' with your OpenAI API key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    setMessages([...messages, {\n      text: input,\n      user: 'user'\n    }]);\n    const response = await fetchMessage(input);\n    setMessages([...messages, {\n      text: response,\n      user: 'bot'\n    }]);\n    setInput('');\n  };\n  const fetchMessage = async input => {\n    const response = await fetch('https://api.openai.com/v1/engines/davinci/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${OpenAIAPIKey}`\n      },\n      body: JSON.stringify({\n        prompt: `You: ${input}\\nAI:`,\n        max_tokens: 150\n      })\n    });\n    const data = await response.json();\n    console.log('API response:', data);\n    return data.choices[0].text.trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' && sendMessage(),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","OpenAIAPIKey","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","sendMessage","text","user","response","fetchMessage","fetch","method","headers","body","JSON","stringify","prompt","max_tokens","data","json","console","log","choices","trim","children","className","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","placeholder","_c","$RefreshReg$"],"sources":["/Users/michaelofengenden/Desktop/Aula/app/src/Chat.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { OpenAIAPIKey } from './config'; // Create a file named 'config.js' with your OpenAI API key\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    setMessages([...messages, { text: input, user: 'user' }]);\n    const response = await fetchMessage(input);\n    setMessages([...messages, { text: response, user: 'bot' }]);\n    setInput('');\n  };\n\n  const fetchMessage = async (input) => {\n    const response = await fetch('https://api.openai.com/v1/engines/davinci/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${OpenAIAPIKey}`\n      },\n      body: JSON.stringify({\n        prompt: `You: ${input}\\nAI:`,\n        max_tokens: 150\n      })\n    });\n    const data = await response.json();\n    console.log('API response:', data);\n    return data.choices[0].text.trim();\n  };\n\n  return (\n    <div>\n      <div className=\"message-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.user}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n        placeholder=\"Type a message...\"\n      />\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEK,IAAI,EAAEH,KAAK;MAAEI,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IACzD,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAACN,KAAK,CAAC;IAC1CD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEK,IAAI,EAAEE,QAAQ;MAAED,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;IAC3DH,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMK,YAAY,GAAG,MAAON,KAAK,IAAK;IACpC,MAAMK,QAAQ,GAAG,MAAME,KAAK,CAAC,uDAAuD,EAAE;MACpFC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAAShB,YAAa;MAC1C,CAAC;MACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAG,QAAOb,KAAM,OAAM;QAC5Bc,UAAU,EAAE;MACd,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;IAClC,OAAOA,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,CAACiB,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAK2B,SAAS,EAAC,mBAAmB;MAAAD,QAAA,EAC/BvB,QAAQ,CAACyB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B9B,OAAA;QAAiB2B,SAAS,EAAG,WAAUE,OAAO,CAACpB,IAAK,EAAE;QAAAiB,QAAA,EACnDG,OAAO,CAACrB;MAAI,GADLsB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE/B,KAAM;MACbgC,QAAQ,EAAGC,CAAC,IAAKhC,QAAQ,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIlC,WAAW,CAAC,CAAE;MACtDmC,WAAW,EAAC;IAAmB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9CID,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}